
CREATE TABLE ROLE(
    role char(3),
    primary key (role)
);

INSERT INTO ROLE VALUES ('adm');
INSERT INTO ROLE VALUES ('mod');
INSERT INTO ROLE VALUES ('mem');

CREATE TABLE sTYPE(
    type char(2),
    primary key (type)
);

INSERT INTO sType VALUES ('ug');
INSERT INTO sType VALUES ('pg');

Create TABLE pGroup(
    group_id number generated by default as identity primary key ,
    name varchar2(256),
    timestamp timestamp default sysdate not null

);


CREATE TABLE University(
    university_id number GENERATED BY DEFAULT AS IDENTITY primary key ,
    name varchar2(512) not null ,
    timestamp timestamp default sysdate not null,
    all_group_id number not null references pGroup,
    teachers_group_id number not null references pGroup,
    students_group_id number not null references pGroup,
    ugStudents_group_id number not null references pGroup,
    pgStudents_group_id number not null references pGroup
);

CREATE TABLE Department(
    department_id number GENERATED BY DEFAULT AS IDENTITY primary key ,
    name varchar2(512) not null,
    timestamp timestamp default sysdate not null,
    university_id number not null references UNIVERSITY on delete CASCADE ,
    dept_code char(2) not null ,
    all_group_id number not null references pGroup,
    students_group_id number not null references pGroup,
    teachers_group_id number not null references pGroup,
    ugStudents_group_id number not null references pGroup,
    pgStudents_group_id number not null references pGroup,

    CONSTRAINT uniqueName UNIQUE (university_id, name),
    CONSTRAINT uniqueDeptCode UNIQUE (university_id, dept_code) -- new

);

CREATE TABLE Batch(
    batch_id number generated by default as identity  primary key ,
    name varchar2(256),
    university_id number not null ,
    FOREIGN KEY (university_id) references University on delete CASCADE,
    group_id number not null ,
    foreign key (group_id) references pGroup on delete CASCADE,
    year number not null,
    batchOfsType char(2),
    constraint ugOrPg foreign key (batchOfsType) references sTYPE ,
    constraint uniqueBatchYear unique (university_id,batchOfsType, year),
    CONSTRAINT UNIQUEBATCHNAME UNIQUE (university_id, batchOfsType,name) --new

);


CREATE TABLE BatchDept(
    batch_id number not null ,
    department_id number not null ,
    foreign key (batch_id) references BATCH(batch_id) on delete CASCADE,
    foreign key (department_id) references Department(department_id) on delete CASCADE,
    CONSTRAINT pair_key_bd PRIMARY KEY (batch_id, department_id),
    group_id number not null ,
    foreign key (group_id) references pGroup on delete CASCADE
);

CREATE TABLE  Section(
    batch_id number not null ,
    department_id number not null ,
    section_name char(1),
    constraint triplet primary key (section_name, batch_id, department_id),
    foreign key (batch_id, department_id) references BatchDept on delete CASCADE,
    group_id number not null ,
    foreign key (group_id) references pGroup on delete CASCADE
);


CREATE TABLE Person(
    person_id number GENERATED BY DEFAULT AS IDENTITY primary key ,
    first_name VARCHAR2(256) ,
    last_name VARCHAR2(256)  ,
    address VARCHAR2(1024)  ,
    email VARCHAR2(512) unique not null ,
    phone_no CHAR(11) unique ,
    date_of_birth Date ,
    password VARCHAR2(256) not null,
    timestamp Timestamp default sysdate not null
);

CREATE TABLE ACADEMIC_ROLE(
    role_id number generated by default as identity primary key ,
    person_id number not null references Person,
    generated_pass varchar2(256),
    password varchar(256) not null ,
    timestamp TIMESTAMP default sysdate not null ,
    uni_all_group_role char(3) not null references ROLE,
    uni_self_group_role char(3) not null references ROLE,
    dept_all_group_role char(3) not null references ROLE,
    dept_self_group_role char(3) not null references ROLE
);


CREATE TABLE Teacher(
    role_id number references ACADEMIC_ROLE primary key ,
    rank varchar2(128),
    department_id number not null references DEPARTMENT
);


CREATE TABLE Student(
    role_id number references ACADEMIC_ROLE primary key ,
    batch_id number not null,
    department_id number not null references Department on delete cascade ,
    section_name char(1),
    section_roll_no number,
    dept_all_students_role char(3) references ROLE,
    batch_group_role char(3) references ROLE,
    dept_batch_group_role char(3) references ROLE,
    section_group_role char(3) references ROLE,
    uni_all_students_group_role CHAR(3) references ROLE,
    FOREIGN KEY (section_name, batch_id, department_id) references Section(section_name, batch_id, department_id),
    constraint uniqueRole UNIQUE (section_name, batch_id, department_id, section_roll_no)
);

CREATE TABLE MANAGEMENT(
    management_id number generated by default as identity primary key ,
    person_id number not null references Person,
    university_id number not null references UNIVERSITY,
    timestamp Timestamp default sysdate not null,
    uni_management_role char(3) references ROLE
);

CREATE TABLE Group_Member(
    person_id number not null ,
    group_id number not null ,
    timestamp timestamp default sysdate not null ,
    type char(3),
    group_role char(3),
    FOREIGN KEY (person_id) references Person(person_id) on delete CASCADE,
    FOREIGN KEY (group_id) references pGroup(group_id) on delete CASCADE,
    FOREIGN KEY (group_role) references ROLE,
    constraint pair_key PRIMARY KEY (person_id, group_id)
);


CREATE TABLE CONTENT(
    content_id number generated by default as identity primary key ,
    text CLOB not null ,
    posted_at TIMESTAMP default sysdate not null ,
    role_id number not null references ACADEMIC_ROLE
);

CREATE TABLE POST(
    content_id number primary key references CONTENT,
    title CLOB not null,
    group_id number not null references PGROUP
);
CREATE TABLE COMMENT_(
    content_id number primary key references CONTENT,
    comment_of number not null references CONTENT
);

CREATE TABLE VOTE(
    content_id number not null references CONTENT,
    down char(1) default 'N',
    role_id number references ACADEMIC_ROLE
);

-- drop table VOTE;
-- drop table COMMENT_;
-- drop table POST;
-- drop table CONTENT;


--
-- DROP TABLE VOTE;
-- DROP TABLE POSTCOMMENT;
-- DROP TABLE GROUP_MEMBER;
-- DROP TABLE Post;
-- DROP TABLE Student;
-- DROP TABLE Teacher;
-- drop table MANAGEMENT;
-- DROP TABLE Section;
-- DROP TABLE BatchDept;
-- DROP TABLE Batch;
-- DROP TABLE Department;
-- DROP TABLE PERSON;
-- DROP TABLE UNIVERSITY;
-- DROP TABLE pGroup;
-- DROP TABLE ROLE;
-- DROP TABLE sTYPE;